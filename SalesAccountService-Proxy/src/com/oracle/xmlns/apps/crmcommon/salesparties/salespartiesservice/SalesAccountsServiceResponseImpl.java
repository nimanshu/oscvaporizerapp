package com.oracle.xmlns.apps.crmcommon.salesparties.salespartiesservice;

import com.sun.xml.ws.api.addressing.AddressingVersion;
import com.sun.xml.ws.api.message.Header;
import com.sun.xml.ws.api.message.HeaderList;
import com.sun.xml.ws.developer.JAXWSProperties;

import javax.annotation.Resource;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.ParameterStyle;
import javax.jws.soap.SOAPBinding.Style;

import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.WebServiceContext;
import javax.xml.ws.soap.Addressing;
// !THE CHANGES MADE TO THIS FILE WILL BE DESTROYED IF REGENERATED!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (11.1.1.0.0, build 130224.1947.04102)

@WebService(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/",
  name="SalesAccountsServiceResponse")
@XmlSeeAlso(
  { salesaccount.types.ObjectFactory.class })
@SOAPBinding(style=Style.DOCUMENT)
@Addressing(enabled=true, required=true)
public class SalesAccountsServiceResponseImpl
{
  @Resource
  private WebServiceContext wsContext;

  private static final AddressingVersion WS_ADDR_VER = AddressingVersion.W3C;

  @WebMethod(action="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0/Fault")
  @SOAPBinding(parameterStyle=ParameterStyle.BARE)
  @Action(input="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0/Fault")
  @Oneway
  public void onFault(@WebParam(targetNamespace="http://xmlns.oracle.com/oracleas/schema/oracle-fault-11_0",
      partName="parameters", name="Fault")
    salesaccount.types.FaultType parameters)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("parameters: '" + parameters + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/updateSalesAccountTerritoryAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/updateSalesAccountTerritoryAsyncResponse")
  @RequestWrapper(localName="updateSalesAccountTerritoryAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.UpdateSalesAccountTerritoryAsyncResponse")
  @Oneway
  public void updateSalesAccountTerritoryAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountTerritory result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/createSalesAccountAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/createSalesAccountAsyncResponse")
  @RequestWrapper(localName="createSalesAccountAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.CreateSalesAccountAsyncResponse")
  @Oneway
  public void createSalesAccountAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccount result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/updateSalesAccountAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/updateSalesAccountAsyncResponse")
  @RequestWrapper(localName="updateSalesAccountAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.UpdateSalesAccountAsyncResponse")
  @Oneway
  public void updateSalesAccountAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccount result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/deleteSalesAccountContactsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/deleteSalesAccountContactsAsyncResponse")
  @RequestWrapper(localName="deleteSalesAccountContactsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.DeleteSalesAccountContactsAsyncResponse")
  @Oneway
  public void deleteSalesAccountContactsAsyncResponse()
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findSalesAccountTerritoryAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findSalesAccountTerritoryAsyncResponse")
  @RequestWrapper(localName="findSalesAccountTerritoryAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.FindSalesAccountTerritoryAsyncResponse")
  @Oneway
  public void findSalesAccountTerritoryAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    java.util.List<salesaccount.types.SalesAccountTerritory> result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getSalesAccountContactsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getSalesAccountContactsAsyncResponse")
  @RequestWrapper(localName="getSalesAccountContactsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.GetSalesAccountContactsAsyncResponse")
  @Oneway
  public void getSalesAccountContactsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountContacts result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/mergeSalesAccountAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/mergeSalesAccountAsyncResponse")
  @RequestWrapper(localName="mergeSalesAccountAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.MergeSalesAccountAsyncResponse")
  @Oneway
  public void mergeSalesAccountAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccount result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/mergeSalesAccountTerritoryAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/mergeSalesAccountTerritoryAsyncResponse")
  @RequestWrapper(localName="mergeSalesAccountTerritoryAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.MergeSalesAccountTerritoryAsyncResponse")
  @Oneway
  public void mergeSalesAccountTerritoryAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountTerritory result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getSalesAccountTerritoryAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getSalesAccountTerritoryAsyncResponse")
  @RequestWrapper(localName="getSalesAccountTerritoryAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.GetSalesAccountTerritoryAsyncResponse")
  @Oneway
  public void getSalesAccountTerritoryAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountTerritory result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/mergeSalesAccountContactsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/mergeSalesAccountContactsAsyncResponse")
  @RequestWrapper(localName="mergeSalesAccountContactsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.MergeSalesAccountContactsAsyncResponse")
  @Oneway
  public void mergeSalesAccountContactsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountContacts result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/createSalesAccountTerritoryAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/createSalesAccountTerritoryAsyncResponse")
  @RequestWrapper(localName="createSalesAccountTerritoryAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.CreateSalesAccountTerritoryAsyncResponse")
  @Oneway
  public void createSalesAccountTerritoryAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountTerritory result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/createSalesAccountContactsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/createSalesAccountContactsAsyncResponse")
  @RequestWrapper(localName="createSalesAccountContactsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.CreateSalesAccountContactsAsyncResponse")
  @Oneway
  public void createSalesAccountContactsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountContacts result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/deleteSalesAccountTerritoryAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/deleteSalesAccountTerritoryAsyncResponse")
  @RequestWrapper(localName="deleteSalesAccountTerritoryAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.DeleteSalesAccountTerritoryAsyncResponse")
  @Oneway
  public void deleteSalesAccountTerritoryAsyncResponse()
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findSalesAccountContactsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findSalesAccountContactsAsyncResponse")
  @RequestWrapper(localName="findSalesAccountContactsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.FindSalesAccountContactsAsyncResponse")
  @Oneway
  public void findSalesAccountContactsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    java.util.List<salesaccount.types.SalesAccountContacts> result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/updateSalesAccountContactsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/updateSalesAccountContactsAsyncResponse")
  @RequestWrapper(localName="updateSalesAccountContactsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.UpdateSalesAccountContactsAsyncResponse")
  @Oneway
  public void updateSalesAccountContactsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountContacts result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getSalesAccountAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getSalesAccountAsyncResponse")
  @RequestWrapper(localName="getSalesAccountAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.GetSalesAccountAsyncResponse")
  @Oneway
  public void getSalesAccountAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccount result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findSalesAccountAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findSalesAccountAsyncResponse")
  @RequestWrapper(localName="findSalesAccountAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.FindSalesAccountAsyncResponse")
  @Oneway
  public void findSalesAccountAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    java.util.List<salesaccount.types.SalesAccount> result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/deleteSalesAccountAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/deleteSalesAccountAsyncResponse")
  @RequestWrapper(localName="deleteSalesAccountAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.DeleteSalesAccountAsyncResponse")
  @Oneway
  public void deleteSalesAccountAsyncResponse()
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/updateSalesAccountContactPointsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/updateSalesAccountContactPointsAsyncResponse")
  @RequestWrapper(localName="updateSalesAccountContactPointsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.UpdateSalesAccountContactPointsAsyncResponse")
  @Oneway
  public void updateSalesAccountContactPointsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountContactPoints result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/mergeSalesAccountContactPointsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/mergeSalesAccountContactPointsAsyncResponse")
  @RequestWrapper(localName="mergeSalesAccountContactPointsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.MergeSalesAccountContactPointsAsyncResponse")
  @Oneway
  public void mergeSalesAccountContactPointsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountContactPoints result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getSalesAccountContactPointsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getSalesAccountContactPointsAsyncResponse")
  @RequestWrapper(localName="getSalesAccountContactPointsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.GetSalesAccountContactPointsAsyncResponse")
  @Oneway
  public void getSalesAccountContactPointsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountContactPoints result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/deleteSalesAccountContactPointsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/deleteSalesAccountContactPointsAsyncResponse")
  @RequestWrapper(localName="deleteSalesAccountContactPointsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.DeleteSalesAccountContactPointsAsyncResponse")
  @Oneway
  public void deleteSalesAccountContactPointsAsyncResponse()
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findSalesAccountContactPointsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findSalesAccountContactPointsAsyncResponse")
  @RequestWrapper(localName="findSalesAccountContactPointsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.FindSalesAccountContactPointsAsyncResponse")
  @Oneway
  public void findSalesAccountContactPointsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    java.util.List<salesaccount.types.SalesAccountContactPoints> result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/createSalesAccountContactPointsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/createSalesAccountContactPointsAsyncResponse")
  @RequestWrapper(localName="createSalesAccountContactPointsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.CreateSalesAccountContactPointsAsyncResponse")
  @Oneway
  public void createSalesAccountContactPointsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.SalesAccountContactPoints result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findAccountsOfPartyAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/findAccountsOfPartyAsyncResponse")
  @RequestWrapper(localName="findAccountsOfPartyAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.FindAccountsOfPartyAsyncResponse")
  @Oneway
  public void findAccountsOfPartyAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    java.util.List<salesaccount.types.SalesAccount> result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getDfltObjAttrHintsAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getDfltObjAttrHintsAsyncResponse")
  @RequestWrapper(localName="getDfltObjAttrHintsAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.GetDfltObjAttrHintsAsyncResponse")
  @Oneway
  public void getDfltObjAttrHintsAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    salesaccount.types.ObjAttrHints result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getEntityListAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getEntityListAsyncResponse")
  @RequestWrapper(localName="getEntityListAsyncResponse", targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.GetEntityListAsyncResponse")
  @Oneway
  public void getEntityListAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    java.util.List<salesaccount.types.ServiceViewInfo> result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }

  @WebMethod(action="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getServiceLastUpdateTimeAsyncResponse")
  @Action(input="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/getServiceLastUpdateTimeAsyncResponse")
  @RequestWrapper(localName="getServiceLastUpdateTimeAsyncResponse",
    targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
    className="salesaccount.types.GetServiceLastUpdateTimeAsyncResponse")
  @Oneway
  public void getServiceLastUpdateTimeAsyncResponse(@WebParam(targetNamespace="http://xmlns.oracle.com/apps/crmCommon/salesParties/salesPartiesService/types/",
      name="result")
    XMLGregorianCalendar result)
  {
    // Use the sample code to extract the relatesTo id for correlation and then add your rest of the logic

    System.out.println("Received the asynchronous reply");

    // get the messageId to correlate this reply with the original request
    HeaderList headerList = (HeaderList)wsContext.getMessageContext().get(JAXWSProperties.INBOUND_HEADER_LIST_PROPERTY);
    Header realtesToheader = headerList.get(WS_ADDR_VER.relatesToTag, true);
    String relatesToMessageId = realtesToheader.getStringContent();
    System.out.println("RelatesTo message id: " + relatesToMessageId);

    System.out.println("result: '" + result + "'");
    // Add your implementation here.
  }
}
